
function varargout = GUI(varargin)

% GUI MATLAB code for GUI.fig
%      GUI, by itself, creates a new GUI or raises the existing
%      singleton*.
%
%      H = GUI returns the handle to a new GUI or the handle to
%      the existing singleton*.
%
%      GUI('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in GUI.M with the given input arguments.
%
%      GUI('Property','Value',...) creates a new GUI or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before GUI_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to GUI_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help GUI

% Last Modified by GUIDE v2.5 17-Feb-2020 01:03:13

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @GUI_OpeningFcn, ...
                   'gui_OutputFcn',  @GUI_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT

% --- Executes just before GUI is made visible.
function GUI_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to GUI (see VARARGIN)

% Choose default command line output for GUI
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes GUI wait for user response (see UIRESUME)
% uiwait(handles.figure1);

clear a;

% --- Outputs from this function are returned to the command line.
function varargout = GUI_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;

% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton1 (see GCBO)

clear a;
% instrreset;
% s = serial('COM8','BaudRate',9600);
% fopen(s)
% interv = 1000;
% init_time = 1;
% setappdata(0,'Pre',init_time);
% %x = linspace(0,100,350);
% %b = linspace(0,100,350);
% signal_reading = zeros(512,1);
% X = 0;
% w = 0;
% %axes(handles.axes1);
% tic;
% while(init_time<interv)
%        signal_reading = fscanf(s,'%e',5);
%         X = [X,signal_reading];
%        plot(X);
%        %print(signal_reading);
%        init_time = init_time+1;
%        setappdata(0,'X',X);
%        mav = abs(mean(signal_reading));
%        %mav = toc;
%        txt = set(handles.edit1,'String',mav); 
%        drawnow limitrate
% end
% tt = toc;
%      disp(tt)
% fclose(s);
instrreset;
s = serial('COM8','BaudRate',9600);
fopen(s);
N = 1000;
N2 = 10000;
t = linspace(0,1000,N)';    % no es necesario trasponer, es para tener vectores columna
y =linspace(0,1000,N);
n = 1;


%% Ejemplo 6: con handler, con "limitrate"
%  Se recomienda esta opción para los mini-proyectos.

h6 = plot(t,zeros(N,1));
xlim([0,200]);

while n < N*10
    tic;
    b = fscanf(s,'%d');
    b2(n) = Filtro_Pasa_altas(b)';
    %b3(n) = Filter_TestLow(b2)';
    b4 = doFilter(b2)';
    h6.YData(n) =b4(n);
    drawnow limitrate
    setappdata(0,'X',X);
    mav = abs(mean(signal_reading));
    txt = set(handles.edit1,'String',mav); 
    tiempo6 = toc;
   if n == 250
       n = 1;
   end
     n = n+1;
     
end
fclose(s);
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)



% --- Executes on button press in pushbutton2.
function pushbutton2_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB

y = getappdata(0,'X');
csvwrite('Data_test.txt',y);
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in ExitB.
function ExitB_Callback(~, eventdata, handles)

endw=200;
setappdata(0,'endw',endw);
close();



function edit1_Callback(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit1 as text
%        str2double(get(hObject,'String')) returns contents of edit1 as a double


% --- Executes during object creation, after setting all properties.
function edit1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
